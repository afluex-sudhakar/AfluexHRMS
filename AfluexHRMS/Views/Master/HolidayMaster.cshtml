@model AfluexHRMS.Models.Master

@{
    ViewBag.Title = "HolidayMaster";
    Layout = "~/Views/Shared/AdminLayout.cshtml";
}

@using (Html.BeginForm("HolidayMaster", "Master", FormMethod.Post, new { @id = "form1", enctype = "multipart/form-data" }))
{
    <div class="container-fluid">
        <div class="page-header">
            <div>
                <h1 class="page-title">Holiday</h1>
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a href="#">Leave Management</a></li>
                    <li class="breadcrumb-item active" aria-current="page">Holiday</li>
                </ol>
            </div>
        </div>
        <div class="row">
            <div class="col-lg-12">
                <div class="card">
                    @*<div class="card-header d-lg-flex justify-content-between">
                        <h4 class="card-title">Leave</h4>
                        <p style="color: #ff0000">
                            @TempData["Holiday"]
                        </p>
                        <p style="color: red">
                            @TempData["ErrHoliday"]
                        </p>
                    </div>*@
                    <div class="card-body">

                        <div class="row">
                            <div class="col-md-3 mb-3">
                                <label class="form-label" for="inputEmail4"><h5>Holiday Name<span class="text-danger">*</span></h5></label>
                                @Html.TextBoxFor(m => m.HolidayName, new { @class = "form-control", @Placeholder = "Holiday Name" })
                            </div>

                            <div class="col-md-3 mb-3">
                                <label class="form-label" for="inputEmail4"><h5>Holiday Date<span class="text-danger">*</span></h5></label>
                                @Html.TextBoxFor(m => m.HolidayDate, new { @class = "form-control", @Placeholder = "Holiday Date" })
                            </div>
                            <div class="col-md-3 mb-3">
                                <label class="form-label d-none d-lg-block mb-lg-3" for="inputEmail4">&nbsp;</label>
                                @if (Model.HolidayID == null)
                                {
                                    <input type="submit" class="btn btn-success" name="Save" value="Save" onclick="return validateform();" />
                                }
                                else
                                {
                                    @Html.HiddenFor(m => m.HolidayID, new { @Value = @Model.HolidayID })
                                    <input type="submit" class="btn btn-success" name="Update" value="Update" onclick="return validateform();" />
                                }
                            </div>

                        </div>



                    </div>


                    <div class="row">
                        <div class="col-lg-12">
                            <div class="box_body p-4">
                                <div class="table-responsive">
                                    <div class="QA_table mb_30">
                                        <table class="table table-bordered display table-hover">
                                            <thead class="thead-primary">
                                                <tr>
                                                    <th>SNo.</th>
                                                    <th>Holiday Name</th>
                                                    <th>Date</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                @if (Model != null)
                                                {
                                                    if (Model.lstList != null)
                                                    {
                                                        int i = 1;
                                                        foreach (var Item in Model.lstList)
                                                        {
                                                            <tr class="text-left">
                                                                <td>@i</td>
                                                                <td>@Item.HolidayName</td>
                                                                <td>@Item.HolidayDate</td>
                                                            </tr>
                                                            i++;
                                                        }
                                                    }
                                                }
                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                </div>
            </div>
        </div>
    </div>

}


<script src="~/assets/vendor_components/jquery/dist/jquery.min.js"></script>
<script src="~/assets/js/jquery1-3.4.1.min.js"></script>
<script src="//code.jquery.com/ui/1.11.4/jquery-ui.js"></script>
<link rel="stylesheet" type="text/css" href="https://code.jquery.com/ui/1.12.0/themes/smoothness/jquery-ui.css">

<style>
    .errortext {
        border: 1px solid red !important;
        background-color: #fff0f0 !important;
    }
</style>

@if (TempData["Holiday"] != null)
{
    <script type="text/javascript">
            window.onload = function () {
               notif({
                   msg: "<b>Success:</b> @TempData["Holiday"]",
                type: "success"
            });
            };
    </script>
}
else if (TempData["ErrHoliday"] != null)
{

    <script type="text/javascript">
            window.onload = function () {
                notif({
                    msg: "<b>Oops!</b> @TempData["ErrHoliday"]",
                    type: "error"
                });
            };

    </script>

}

<script>

    function validateform() {

        $(".errortext").removeClass("errortext");

        if ($('#HolidayName').val() == '') {
            $("#HolidayName").addClass('errortext');
            $('#HolidayName').focus();

            return false;
        }
        if ($('#HolidayDate').val() == '') {
            $("#HolidayDate").addClass('errortext');
            $('#HolidayDate').focus();
            $('#HolidayDate').val('');

            return false;
        }

        return true;
    }



    function isNumberOrDecimal(evt) {
        var charCode = (evt.which) ? evt.which : evt.keyCode;
        if (charCode != 46 && charCode > 31
          && (charCode < 48 || charCode > 57))
            return false;

        return true;
    }

    function onlyAlphabets(e, t) {
        try {
            if (window.event) {
                var charCode = window.event.keyCode;
            }
            else if (e) {
                var charCode = e.which;
            }
            else { return true; }
            if ((charCode > 64 && charCode < 91) || (charCode > 96 && charCode < 123))
                return true;
            else
                return false;
        }
        catch (err) {
            alert(err.Description);
        }
    }


    $('#HolidayDate').datepicker({
        dateFormat: 'dd/mm/yy',
        changeYear: true,
        changeMonth: true,
        minDate :0
    });


</script>